import java.util.ArrayList;
import java.util.stream.Stream;

import org.testng.annotations.Test;

public class Streams {

	//@Test
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		ArrayList<String> name = new ArrayList<String>();
		name.add("Aarun");
		name.add("Asha");
		name.add("Bisa");
		name.add("Zora");
		name.add("amma");
		name.add("Amar");
		
		int count = 0;
		for(int i=0; i<name.size();i++)
		{
			String check = name.get(i);
			if(check.startsWith("A"))
				count++;
		}
		System.out.println("Count of names starting with A is ::: "+count);
		
	}
	
	//
	@Test
	public void streamFilter()
	{
		ArrayList<String> name1 = new ArrayList<String>();
		name1.add("Arun");
		name1.add("Asha");
		name1.add("Bisa");
		name1.add("Aoraa");
		name1.add("amma");
		name1.add("Amarr");
		
		//Converting string array 
		//There is no life for intermediate operation if there is not terminal operation i.e filter without count no use
		//Terminal operation will execute only if intermediate operation returns true i.e filter returns True
		Long filter = name1.stream().filter(temp->temp.startsWith("A")).count();
		System.out.println("Count of names starting with A using Streams is::: "+filter);
		
		//Method-2
		//Declaring strings in stream compatible collection
		 Long str = Stream.of("Aa","Ab","Ba","Bd","ab","Bz").filter(s->
		 {
			 //Can add multiple conditions for filter
			 s.startsWith("B");
			 return true;
		 }).count();
		 System.out.println("Count of names starting with B using Stream collection is::: "+str);
		 
		 //print all names of ArrayList having len>4
		 name1.stream().filter(s->s.length()>4).forEach(s-> System.out.println("names having length >3 are :: "+s));
		 
	}
}
